#!/usr/bin/env python

import eventlet
eventlet.monkey_patch()

"""
  CLI interface for nezha management.
"""
import os
import sys

from oslo.config import cfg

possible_topdir = os.path.normpath(os.path.join(os.path.abspath(sys.argv[0]),
                                   os.pardir,
                                   os.pardir))
if os.path.exists(os.path.join(possible_topdir, "nezha", "__init__.py")):
    sys.path.insert(0, possible_topdir)

from nezha.db import api as db_api
from nezha.db import migration
from nezha.openstack.common import log as logging
from nezha import version


CONF = cfg.CONF
LOG = logging.getLogger(__name__)


def do_db_version():
    """Print database's current migration level."""
    print(migration.db_version())


def do_db_sync():
    """
    Place a database under migration control and upgrade,
    creating first if necessary.
    """
    migration.db_sync(CONF.command.version)


def add_command_parsers(subparsers):
    parser = subparsers.add_parser('db_version')
    parser.set_defaults(func=do_db_version)

    parser = subparsers.add_parser('db_sync')
    parser.set_defaults(func=do_db_sync)
    parser.add_argument('version', nargs='?')
    parser.add_argument('current_version', nargs='?')


command_opt = cfg.SubCommandOpt('command',
                                title='Commands',
                                help='Available commands',
                                handler=add_command_parsers)


def main():
    CONF.register_cli_opt(command_opt)
    try:
        default_config_files = cfg.find_config_files('nezha')
        CONF(sys.argv[1:], project='nezha', prog='nezha-manage',
             version=version.version_info.version_string(),
             default_config_files=default_config_files)
        logging.setup("nezha")
    except RuntimeError as e:
        sys.exit("ERROR: %s" % e)

    try:
        CONF.command.func()
    except Exception as e:
        LOG.error(e, exc_info=True)
        sys.exit("ERROR: %s" % e)


if __name__ == '__main__':
    main()
